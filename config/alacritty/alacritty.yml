# Configuration for Alacritty, the GPU enhanced terminal emulator.

# Any items in the `env` entry below will be added as
# environment variables. Some entries may override variables
# set by alacritty itself.
env:
  # TERM variable
  #
  # This value is used to set the `$TERM` environment variable for
  # each instance of Alacritty. If it is not present, alacritty will
  # check the local terminfo database and use `alacritty` if it is
  # available, otherwise `xterm-256color` is used.
  TERM: alacritty

window:
  # Window opacity as a floating point number from `0.0` to `1.0`.
  # The value `0.0` is completely transparent and `1.0` is opaque.
  opacity: 0.85
  # Window dimensions (changes require restart)
  #
  # Specified in number of columns/lines, not pixels.
  # If both are `0`, this setting is ignored.
  dimensions:
    columns: 100
    lines: 30

  # Window position (changes require restart)
  #
  # Specified in number of pixels.
  # If the position is not set, the window manager will handle the placement.
  #position:
  #  x: 0
  #  y: 0

  # Window padding (changes require restart)
  #
  # Blank space added around the window in pixels. This padding is scaled
  # by DPI and the specified value is always added at both opposing sides.
  padding:
    x: 0
    y: 0

  # Spread additional padding evenly around the terminal content.
  dynamic_padding: true

  # Window decorations
  #
  # Values for `decorations`:
  #     - full: Borders and title bar
  #     - none: Neither borders nor title bar
  #
  # Values for `decorations` (macOS only):
  #     - transparent: Title bar, transparent background and title bar buttons
  #     - buttonless: Title bar, transparent background, but no title bar buttons
  decorations: none

  decorations_theme_variant: dark

  # Startup Mode (changes require restart)
  #
  # Values for `startup_mode`:
  #   - Windowed
  #   - Maximized
  #   - Fullscreen
  #
  # Values for `startup_mode` (macOS only):
  #   - SimpleFullscreen
  #startup_mode: Windowed

  # Window title
  title: Alacritty

  # Window class (Linux/BSD only):
  #class:
    # Application instance name
    #instance: Alacritty
    # General application class
    #general: Alacritty

  # GTK theme variant (Linux/BSD only)
  #
  # Override the variant of the GTK theme. Commonly supported values are `dark` and `light`.
  #
  # Set this to `None` to use the default theme variant.
  #gtk_theme_variant: dark

scrolling:
  # Maximum number of lines in the scrollback buffer.
  # Specifying '0' will disable scrolling.
  history: 10000

  # Scrolling distance multiplier.
  multiplier: 3

# Font configuration
font:
  # Normal (roman) font face
  size: 12
  normal:
    # Font family
    #
    # Default:
    #   - (macOS) Menlo
    #   - (Linux/BSD) monospace
    #   - (Windows) Consolas
    #family: MesloLGS NF
    #family: JetBrains Mono
    family: Iosevka Nerd Font Mono

    # The `style` can be specified to pick a specific face.
    style: Regular

  # Bold font face
  bold:
    # Font family
    #
    # If the bold family is not specified, it will fall back to the
    # value specified for the normal font.
    # family:  MesloLGS NF
    #family: JetBrains Mono
    family: Iosevka Nerd Font Mono

    # The `style` can be specified to pick a specific face.
    style: Bold

  # Italic font face
  italic:
    # Font family
    #
    # If the italic family is not specified, it will fall back to the
    # value specified for the normal font.
    # family:  MesloLGS NF
    #family:  Fantasque Sans Mono
    family: VictorMono Nerd Font Mono

    # The `style` can be specified to pick a specific face.
    style: Italic

  # Bold italic font face
  bold_italic:
    # Font family
    #
    # If the bold italic family is not specified, it will fall back to the
    # value specified for the normal font.
    # family:  MesloLGS NF
    # family: JetBrains Mono NL
    #family:  Fantasque Sans Mono
    family: VictorMono Nerd Font Mono

    # The `style` can be specified to pick a specific face.
    style: Bold Italic

  # Point size
    size: 11.0

  # Offset is the extra space around each character. `offset.y` can be thought of
  # as modifying the line spacing, and `offset.x` as modifying the letter spacing.
  offset:
    x: 0
    y: 0

  # Glyph offset determines the locations of the glyphs within their cells with
  # the default being at the bottom. Increasing `x` moves the glyph to the right,
  # increasing `y` moves the glyph upwards.
  glyph_offset:
    x: 0
    y: 0

  # Thin stroke font rendering (macOS only)
  #
  # Thin strokes are suitable for retina displays, but for non-retina screens
  # it is recommended to set `use_thin_strokes` to `false`.
  #use_thin_strokes: true

# If `true`, bold text is drawn using the bright color variants.
draw_bold_text_with_bright_colors: true

schemes:
  codelight: &light
    primary:
      background: '#ffffff'
      foreground: '#1e1e1e'

    cursor:
      text: '#d4d4d4'
      cursor: '#d4d4d4'

    normal:
      black:   '#1e1e1e'
      red:     '#c72e0f'
      green:   '#009000'
      yellow:  '#795e25'
      blue:    '#007acc'
      magenta: '#af00db'
      cyan:    '#56b6c2'
      white:   '#d4d4d4'

    bright:
      black:   '#1e1e1e'
      red:     '#c72e0f'
      green:   '#009000'
      yellow:  '#795e25'
      blue:    '#007acc'
      magenta: '#af00db'
      cyan:    '#56b6c2'
      white:   '#d4d4d4'

  codedark: &dark

    primary:
      background: '#1e1e1e'
      foreground: '#d4d4d4'

    cursor:
      text: '#d4d4d4'
      cursor: '#d4d4d4'

    normal:
      black:   '#1e1e1e'
      red:     '#f44747'
      green:   '#608b4e'
      yellow:  '#dcdcaa'
      blue:    '#569cd6'
      magenta: '#c678dd'
      cyan:    '#56b6c2'
      white:   '#d4d4d4'

    bright:
      black:   '#545454'
      red:     '#f44747'
      green:   '#608b4e'
      yellow:  '#dcdcaa'
      blue:    '#569cd6'
      magenta: '#c678dd'
      cyan:    '#56b6c2'
      white:   '#d4d4d4'

  gruvbox_dark: &gruvbox_dark
    primary:
        # hard contrast: background = '#1d2021'
        background: '#282828'
        # soft contrast: background = '#32302f'
        foreground: '#ebdbb2'

# Normal colors
    normal:
        black:   '#282828'
        red:     '#cc241d'
        green:   '#98971a'
        yellow:  '#d79921'
        blue:    '#458588'
        magenta: '#b16286'
        cyan:    '#689d6a'
        white:   '#a89984'

  # Bright colors
    bright:
        black:   '#928374'
        red:     '#fb4934'
        green:   '#b8bb26'
        yellow:  '#fabd2f'
        blue:    '#83a598'
        magenta: '#d3869b'
        cyan:    '#8ec07c'
        white:   '#ebdbb2'

    cursor:
      text: CellBackground
      cursor: '#ffffff'

  gruvbox_light: &gruvbox_light
    primary:
        # hard contrast: background = '#f9f5d7'
        background: '#fbf1c7'
        # soft contrast: background = '#f2e5bc'
        foreground: '#3c3836'

  # Normal colors
    normal:
        black:   '#fbf1c7'
        red:     '#cc241d'
        green:   '#98971a'
        yellow:  '#d79921'
        blue:    '#458588'
        magenta: '#b16286'
        cyan:    '#689d6a'
        white:   '#7c6f64'

    # Bright colors
    bright:
        black:   '#928374'
        red:     '#9d0006'
        green:   '#79740e'
        yellow:  '#b57614'
        blue:    '#076678'
        magenta: '#8f3f71'
        cyan:    '#427b58'
        white:   '#3c3836'

    cursor:
        text: '#000000'
        cursor: '#ffffff'

  base16_dark: &base16_dark
    primary:
        background: '#181818'
        foreground: '#d8d8d8'

  # Normal colors
    normal:
      black:   '#181818'
      red:     '#ab4642'
      green:   '#a1b56c'
      yellow:  '#f7ca88'
      blue:    '#7cafc2'
      magenta: '#ba8baf'
      cyan:    '#86c1b9'
      white:   '#d8d8d8'

  # Bright colors
    bright:
        black:   '#585858'
        red:     '#ab4642'
        green:   '#a1b56c'
        yellow:  '#f7ca88'
        blue:    '#7cafc2'
        magenta: '#ba8baf'
        cyan:    '#86c1b9'
        white:   '#f8f8f8'

    cursor:
        text: '#000000'
        cursor: '#ffffff'

  iTerm2: &iTerm2
    primary:
        background: '#101421'
        foreground: '#fffbf6'

# Normal colors
    normal:
      black:   '#2e2e2e'
      red:     '#eb4129'
      green:   '#abe047'
      yellow:  '#f6c744'
      blue:    '#47a0f3'
      magenta: '#7b5cb0'
      cyan:    '#64dbed'
      white:   '#e5e9f0'

# Bright colors
    bright:
      black:   '#565656'
      red:     '#ec5357'
      green:   '#c0e17d'
      yellow:  '#f9da6a'
      blue:    '#49a4f8'
      magenta: '#a47de9'
      cyan:    '#99faf2'
      white:   '#ffffff'

    cursor:
      text: CellBackground
      cursor: CellForeground

  kitty: &kitty
    primary:
      # background: '#210215'
      # background: '#1c1b19'
      #background: '#eeeeee'
      background: '#111111'
      foreground: '#dddddd'

    # cursor:
    #   text: CellBackground
    #   cursor: '#fbb829'

# Normal colors
    normal:
      black:   '#000000'
      red:     '#cc0403'
      green:   '#19cb00'
      yellow:  '#cecb00'
      blue:    '#0d73cc'
      magenta: '#cb1ed1'
      cyan:    '#0dcdcd'
      white:   '#dddddd'

# Bright colors
    bright:
      black:   '#767676'
      red:     '#f2201f'
      green:   '#23fd00'
      yellow:  '#fffd00'
      blue:    '#1a8fff'
      magenta: '#fd28ff'
      cyan:    '#14ffff'
      white:   '#ffffff'

    cursor:
      text: CellBackground
      cursor: CellForeground

    selection:
      text: CellForeground
      cursor: '#ffffff'

  srcery: &srcery
    primary:
      background: '#1c1b19'
      foreground: '#fce8c3'

  # Cursor colors
    cursor:
      text: CellBackground
      cursor: '#fbb829'

  # Normal colors
    normal:
      black:   '#1c1b19'
      red:     '#ef2f27'
      green:   '#519f50'
      yellow:  '#fbb829'
      blue:    '#2c78bf'
      magenta: '#e02c6d'
      cyan:    '#0aaeb3'
      white:   '#baa67f'

  # Bright colors
    bright:
      black:   '#918175'
      red:     '#f75341'
      green:   '#98bc37'
      yellow:  '#fed06e'
      blue:    '#68a8e4'
      magenta: '#ff5c8f'
      cyan:    '#53fde9'
      white:   '#fce8c3'


colors: *kitty
# colors: *srcery

# Colors (Tomorrow Night)
#colors:
  # Default colors
  #primary:
  #  background: '#1d1f21'
  #  foreground: '#c5c8c6'

    # Bright and dim foreground colors
    #
    # The dimmed foreground color is calculated automatically if it is not present.
    # If the bright foreground color is not set, or `draw_bold_text_with_bright_colors`
    # is `false`, the normal foreground color will be used.
    #dim_foreground: '#828482'
    #bright_foreground: '#eaeaea'

  # Cursor colors
  #
  # Colors which should be used to draw the terminal cursor. If these are
  # unset, the cursor color will be the inverse of the cell color.
  #cursor:
  #  text: '#000000'
  #  cursor: '#ffffff'

  # Vi mode cursor colors
  #
  # Colors for the cursor when the vi mode is active. If these are unset, the
  # cursor color will be the inverse of the cell color.
  #vi_mode_cursor:
  #  text: '#000000'
  #  cursor: '#ffffff'

  # Selection colors
  #
  # Colors which should be used to draw the selection area. If selection
  # background is unset, selection color will be the inverse of the cell colors.
  # If only text is unset the cell text color will remain the same.
  #selection:
  #  text: '#eaeaea'
  #  background: '#404040'

  # Normal colors
  #normal:
  #  black:   '#1d1f21'
  #  red:     '#cc6666'
  #  green:   '#b5bd68'
  #  yellow:  '#f0c674'
  #  blue:    '#81a2be'
  #  magenta: '#b294bb'
  #  cyan:    '#8abeb7'
  #  white:   '#c5c8c6'

  # Bright colors
  #bright:
  #  black:   '#666666'
  #  red:     '#d54e53'
  #  green:   '#b9ca4a'
  #  yellow:  '#e7c547'
  #  blue:    '#7aa6da'
  #  magenta: '#c397d8'
  #  cyan:    '#70c0b1'
  #  white:   '#eaeaea'

  # Dim colors
  #
  # If the dim colors are not set, they will be calculated automatically based
  # on the `normal` colors.
  #dim:
  #  black:   '#131415'
  #  red:     '#864343'
  #  green:   '#777c44'
  #  yellow:  '#9e824c'
  #  blue:    '#556a7d'
  #  magenta: '#75617b'
  #  cyan:    '#5b7d78'
  #  white:   '#828482'

  # Indexed Colors
  #
  # The indexed colors include all colors from 16 to 256.
  # When these are not set, they're filled with sensible defaults.
  #
  # Example:
  #   `- { index: 16, color: '#ff00ff' }`
  #
  #indexed_colors: []

# Visual Bell
#
# Any time the BEL code is received, Alacritty "rings" the visual bell. Once
# rung, the terminal background will be set to white and transition back to the
# default background color. You can control the rate of this transition by
# setting the `duration` property (represented in milliseconds). You can also
# configure the transition function by setting the `animation` property.
#
# Values for `animation`:
#   - Ease
#   - EaseOut
#   - EaseOutSine
#   - EaseOutQuad
#   - EaseOutCubic
#   - EaseOutQuart
#   - EaseOutQuint
#   - EaseOutExpo
#   - EaseOutCirc
#   - Linear
#
# Specifying a `duration` of `0` will disable the visual bell.
#visual_bell:
#  animation: EaseOutExpo
#  duration: 0
#  color: '#ffffff'

selection:
  #semantic_escape_chars: ",│`|:\"' ()[]{}<>\t"

  # When set to `true`, selected text will be copied to the primary clipboard.
  save_to_clipboard: false

# Allow terminal applications to change Alacritty's window title.
dynamic_title: true

cursor:
  # Cursor style
  #
  # Values for `style`:
  #   - ▇ Block
  #   - _ Underline
  #   - | Beam
  style: Block

  # Vi mode cursor style
  #
  # If the vi mode cursor style is `None` or not specified, it will fall back to
  # the style of the active value of the normal cursor.
  #
  # See `cursor.style` for available options.
  #vi_mode_style: None

  # If this is `true`, the cursor will be rendered as a hollow box when the
  # window is not focused.
  unfocused_hollow: true

  # Thickness of the cursor relative to the cell width as floating point number
  # from `0.0` to `1.0`.
  #thickness: 0.15

# Live config reload (changes require restart)
live_config_reload: true

# Shell
#
# You can set `shell.program` to the path of your favorite shell, e.g. `/bin/fish`.
# Entries in `shell.args` are passed unmodified as arguments to the shell.
#
# Default:
#   - (macOS) /bin/bash --login
#   - (Linux/BSD) user login shell - (Windows) powershell
#shell:
#  program: /bin/bash
#  args:
#    - --login

shell:
   program: /bin/fish
   # args:
   #   - -l
   #   - -c
   #   - tmux -u
   # - "tmux attach || tmux"
   #   - -D
   #   - -s
   #   - main


# Startup directory
#
# Directory the shell is started in. If this is unset, or `None`, the working
# directory of the parent process will be used.
#working_directory: None

# WinPTY backend (Windows only)
#
# Alacritty defaults to using the newer ConPTY backend if it is available,
# since it resolves a lot of bugs and is quite a bit faster. If it is not
# available, the the WinPTY backend will be used instead.
#
# Setting this option to `true` makes Alacritty use the legacy WinPTY backend,
# even if the ConPTY backend is available.
#winpty_backend: false

# Send ESC (\x1b) before characters when alt is pressed.
#alt_send_esc: true

mouse:
  # Click settings
  #
  # The `double_click` and `triple_click` settings control the time
  # alacritty should wait for accepting multiple clicks as one double
  # or triple click.
  #double_click: { threshold: 300 }
  #triple_click: { threshold: 300 }

  # If this is `true`, the cursor is temporarily hidden when typing.
  hide_when_typing: true

  #url:
    # URL launcher
    #
    # This program is executed when clicking on a text which is recognized as a URL.
    # The URL is always added to the command as the last parameter.
    #
    # When set to `launcher: None`, URL launching will be disabled completely.
    #
    # Default:
    #   - (macOS) open
    #   - (Linux/BSD) xdg-open
    #   - (Windows) explorer
    #launcher:
    #  program: xdg-open
    #  args: []

    # URL modifiers
    #
    # These are the modifiers that need to be held down for opening URLs when clicking
    # on them. The available modifiers are documented in the key binding section.
    #modifiers: None

# Mouse bindings
#
# Mouse bindings are specified as a list of objects, much like the key
# bindings further below.
#
# To trigger mouse bindings when an application running within Alacritty captures the mouse, the
# `Shift` modifier is automatically added as a requirement.
#
# Each mouse binding will specify a:
#
# - `mouse`:
#
#   - Middle
#   - Left
#   - Right
#   - Numeric identifier such as `5`
#
# - `action` (see key bindings)
#
# And optionally:
#
# - `mods` (see key bindings)
#mouse_bindings:
#  - { mouse: Middle, action: PasteSelection }

# Key bindings
#
# Key bindings are specified as a list of objects. For example, this is the
# default paste binding:
#
# `- { key: V, mods: Control|Shift, action: Paste }`
#
# Each key binding will specify a:
#
# - `key`: Identifier of the key pressed
#
#    - A-Z
#    - F1-F24
#    - Key0-Key9
#
#    A full list with available key codes can be found here:
#    https://docs.rs/glutin/*/glutin/event/enum.VirtualKeyCode.html#variants
#
#    Instead of using the name of the keys, the `key` field also supports using
#    the scancode of the desired key. Scancodes have to be specified as a
#    decimal number. This command will allow you to display the hex scancodes
#    for certain keys:
#
#       `showkey --scancodes`.
#
# Then exactly one of:
#
# - `chars`: Send a byte sequence to the running application
#
#    The `chars` field writes the specified string to the terminal. This makes
#    it possible to pass escape sequences. To find escape codes for bindings
#    like `PageUp` (`"\x1b[5~"`), you can run the command `showkey -a` outside
#    of tmux. Note that applications use terminfo to map escape sequences back
#    to keys. It is therefore required to update the terminfo when changing an
#    escape sequence.
#
# - `action`: Execute a predefined action
#
#   - ToggleViMode
#   - Copy
#   - Paste
#   - PasteSelection
#   - IncreaseFontSize
#   - DecreaseFontSize
#   - ResetFontSize
#   - ScrollPageUp
#   - ScrollPageDown
#   - ScrollLineUp
#   - ScrollLineDown
#   - ScrollToTop
#   - ScrollToBottom
#   - ClearHistory
#   - Hide
#   - Minimize
#   - Quit
#   - ToggleFullscreen
#   - SpawnNewInstance
#   - ClearLogNotice
#   - ClearSelection
#   - ReceiveChar
#   - None
#
#   (`mode: Vi` only):
#   - Open
#   - Up
#   - Down
#   - Left
#   - Right
#   - First
#   - Last
#   - FirstOccupied
#   - High
#   - Middle
#   - Low
#   - SemanticLeft
#   - SemanticRight
#   - SemanticLeftEnd
#   - SemanticRightEnd
#   - WordRight
#   - WordLeft
#   - WordRightEnd
#   - WordLeftEnd
#   - Bracket
#   - ToggleNormalSelection
#   - ToggleLineSelection
#   - ToggleBlockSelection
#   - ToggleSemanticSelection
#
#   (macOS only):
#   - ToggleSimpleFullscreen: Enters fullscreen without occupying another space
#
#   (Linux/BSD only):
#   - CopySelection: Copies into selection buffer
#
# - `command`: Fork and execute a specified command plus arguments
#
#    The `command` field must be a map containing a `program` string and an
#    `args` array of command line parameter strings. For example:
#       `{ program: "alacritty", args: ["-e", "vttest"] }`
#
# And optionally:
#
# - `mods`: Key modifiers to filter binding actions
#
#    - Command
#    - Control
#    - Option
#    - Super
#    - Shift
#    - Alt
#
#    Multiple `mods` can be combined using `|` like this:
#       `mods: Control|Shift`.
#    Whitespace and capitalization are relevant and must match the example.
#
# - `mode`: Indicate a binding for only specific terminal reported modes
#
#    This is mainly used to send applications the correct escape sequences
#    when in different modes.
#
#    - AppCursor
#    - AppKeypad
#    - Alt
#
#    A `~` operator can be used before a mode to apply the binding whenever
#    the mode is *not* active, e.g. `~Alt`.
#
# Bindings are always filled by default, but will be replaced when a new
# binding with the same triggers is defined. To unset a default binding, it can
# be mapped to the `ReceiveChar` action. Alternatively, you can use `None` for
# a no-op if you do not wish to receive input characters for that binding.
#
# If the same trigger is assigned to multiple actions, all of them are executed
# at once.
key_bindings:
    # (Windows, Linux, and BSD only)
  - { key: V,        mods: Control|Shift, action: Paste            }
  - { key: C,        mods: Control|Shift, action: Copy             }
  - { key: Insert,   mods: Shift,         action: PasteSelection   }
  - { key: Key0,     mods: Control,       action: ResetFontSize    }
  - { key: Equals,   mods: Control,       action: IncreaseFontSize }
  - { key: Plus,     mods: Control,       action: IncreaseFontSize }
  - { key: Minus,    mods: Control,       action: DecreaseFontSize }
  - { key: Minus,    mods: Control,       action: DecreaseFontSize }

#debug:
  # Display the time it takes to redraw each frame.
  #render_timer: false

  # Keep the log file after quitting Alacritty.
  #persistent_logging: false

  # Log level
  #
  # Values for `log_level`:
  #   - None
  #   - Error
  #   - Warn
  #   - Info
  #   - Debug
  #   - Trace
  #log_level: Warn

  # Print all received window events.
  #print_events: false
