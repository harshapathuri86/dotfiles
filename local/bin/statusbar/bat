#!/bin/sh

# Prints all batteries, their percentage remaining and an emoji corresponding
# to charge status (🔌 for plugged up, 🔋 for discharging on battery, etc.).

case $BLOCK_BUTTON in
	3) notify-send "🔋 Battery module" "🔋: discharging
🛑: not charging
♻: stagnant charge
🔌: charging
⚡: charged
❗: battery very low!
- Scroll to change adjust xbacklight." ;;
	4) xbacklight -inc 2 ;;
	5) xbacklight -dec 2 ;;
	6) "$TERMINAL" -e "$EDITOR" "$0" ;;
esac

for battery in /sys/class/power_supply/BAT?*; do
  # If non-first battery, print a space separator.
  [ -n "${capacity+x}" ] && printf " "

  # Sets up the status and capacity
  case "$(cat "$battery/status" 2>&1)" in
    "Full") status="⚡" ;;
    "Discharging") status="🔋" ;;
    "Charging") status="🔌" ;;
    "Not charging") status="🛑" ;;
    "Unknown") status="♻️" ;;
    *) exit 1 ;;
  esac

  capacity="$(cat "$battery/capacity" 2>&1)"

  # Will make a warn variable if discharging and low
  [ "$status" = "🔋" ] && [ "$capacity" -le 25 ] && warn="❗"

  # Use if statements to determine the color to print based on the value of capacity
  if [ "$capacity" -lt 25 ]; then
    printf "\e[31m%s%s%d%%\e[0m" "$status" "$warn" "$capacity"
  elif [ "$capacity" -lt 50 ]; then
    #printf "\e[33m%s%s%d%%\e[0m" "$status" "$warn" "$capacity"
    echo -e "\e[33m $status $warn $capacity\e[0m"
  elif [ "$capacity" -lt 75 ]; then
    printf "\e[32m%s%s%d%%\e[0m" "$status" "$warn" "$capacity"
  elif [ "$capacity" -le 100 ]; then
    printf "\e[34m%s%s%d%%\e[0m" "$status" "$warn" "$capacity"
  else
    printf "Invalid capacity"
  fi; unset warn
done && printf "\\n"

